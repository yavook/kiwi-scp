#!/bin/sh

#############
# CONSTANTS #
#############

# base config filename
KIWI_CONF_NAME="kiwi.yml"
# version tag filename
KIWI_VERSION_TAG="etc/version_tag"

# dependencies to run kiwi-config
KIWI_DEPS="python3 pipenv less docker docker-compose"
# base install dir
KIWI_BASEDIR="${HOME}/.local/lib/kiwi-config"
# per-user env setup script
KIWI_ENVFILE="${HOME}/.kiwienv"

# repository uri
KIWI_REPO="https://github.com/ldericher/kiwi-config"
# use latest version by default
KIWI_VERSION="master"


###################
# DYNAMIC STRINGS #
###################

# directory of correct installation
kiwi_installdir() {
  echo "${KIWI_BASEDIR}/${KIWI_VERSION}"
}

# src directory in installed version
kiwi_root() {
  echo "$(kiwi_installdir)/src"
}

# main script in installed version
kiwi_executable() {
  echo "$(kiwi_root)/kiwi-config.py"
}

# cache current work directory
WORKDIR="$(pwd)"


##################
# PER-USER SETUP #
##################

# add in environment setup
if [ -f "${KIWI_ENVFILE}" ]; then
  # shellcheck source=$HOME/.kiwienv
  . "${KIWI_ENVFILE}"
fi


##########
# CHECKS #
##########

for dep in ${KIWI_DEPS}; do
  if ! command -v "${dep}" >/dev/null 2>/dev/null; then
    echo "Dependency '${dep}' not found, please install!" >/dev/stderr
    exit 1
  fi
done


########
# MAIN #
########

# check if pwd is a kiwi folder
if [ -f "./${KIWI_CONF_NAME}" ]; then
  # determine needed kiwi-config version
  re_version_line='version\s*:\s*'
  eval "$(grep -E "${re_version_line}" "./${KIWI_CONF_NAME}" | sed -r "s/${re_version_line}/KIWI_VERSION=/")"
fi

# install if kiwi-config not found
if [ ! -x "$(kiwi_executable)" ]; then
  printf "Installing kiwi-config v%s into %s ... " "${KIWI_VERSION}" "${KIWI_BASEDIR}"

  # switch to temp dir
  tmpdir=$(mktemp -d)
  cd "${tmpdir}" || :

  # download archive
  curl --proto '=https' --tlsv1.2 -sSfL "${KIWI_REPO}/archive/${KIWI_VERSION}.tar.gz" | tar xz

  # read archive version tag
  cd "kiwi-config-${KIWI_VERSION}" || :
  KIWI_VERSION=$(cat "./src/${KIWI_VERSION_TAG}")

  if [ -x "$(kiwi_executable)" ]; then
    # after version update: no need to install
    echo "v${KIWI_VERSION} already installed!"

  else
    # install archive
    mkdir -p "$(kiwi_installdir)"
    mv "src" "Pipfile" "Pipfile.lock" "$(kiwi_installdir)/"
    echo "OK"
  fi

  # discard temp dir
  cd "${WORKDIR}" || :
  rm -rf "${tmpdir}"
fi

# go back to the original work directory
cd "${WORKDIR}" || :

# setup main environment
KIWI_ROOT="$(kiwi_root)"
PIPENV_VERBOSITY=-1
PIPENV_PIPFILE="$(kiwi_installdir)/Pipfile"

export KIWI_CONF_NAME
export KIWI_ROOT
export PIPENV_VERBOSITY
export PIPENV_PIPFILE

# check virtualenv
cd "$(kiwi_installdir)" || :
if ! pipenv --venv >/dev/null 2>/dev/null; then
  # install virtualenv
  printf "Preparing virtualenv ... "
  pipenv sync >/dev/null 2>/dev/null
  echo "OK"
fi

# run main script
exec pipenv run "$(kiwi_executable)" "${@}"
